---
import { getCollection } from "astro:content";
import MagicCard from "./MagicCard.astro";
import { formatDate } from "../utils/date";
import { calculateReadingTime } from "../utils/readingTime";

const allPosts = (
  await getCollection("blog", ({ data }) => {
    return data.draft !== true;
  })
).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

const latestPosts = allPosts.slice(0, 4);

const postsWithReadingTime = await Promise.all(
  latestPosts.map(async (post) => {
    // Assuming post.body contains the full markdown content
    // You might need to adjust this if your setup is different
    // or if you need to fetch the rendered content differently
    const contentForReadingTime = post.body;
    const readingTime = calculateReadingTime(contentForReadingTime);
    return { ...post, readingTime };
  })
);
---

<section class="section blog-section animate">
  <div class="section-header">
    <h2>Apunts recents</h2>
    <a href="/blog" class="view-all-link-text button-link">Veure tots →</a>
  </div>

  <div class="blog-posts">
    {
      postsWithReadingTime.map((post) => (
        <MagicCard class="blog-post-card">
          <div class="post-content">
            <div class="post-meta text-muted">
              <time datetime={post.data.date.toISOString()} transition:name={`date-${post.slug}`}>
                {formatDate(post.data.date)}
              </time>
              <span class="reading-time">⌛ {post.readingTime}</span>
            </div>
            <h3 class="post-title" transition:name={`title-${post.slug}`}>
              <a href={`/blog/${post.slug}`}>{post.data.title}</a>
            </h3>
            <p class="post-description text-muted">{post.data.description}</p>
          </div>
          <a href={`/blog/${post.slug}`} class="read-more button-link">
            Llegir més →
          </a>
        </MagicCard>
      ))
    }
  </div>
</section>

<style>
  h2 {
    margin-bottom: 0;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    margin-bottom: 1.5rem;
    gap: 1rem;
  }

  .blog-posts {
    display: grid;
    gap: 1.5rem;
  }

  @media (min-width: 768px) {
    .blog-posts {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .blog-post-card {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
  }

  .post-content {
    flex-grow: 1;
    margin-bottom: 1rem;
  }

  .post-meta {
    font-size: 0.875rem;
    margin-bottom: 0.5rem;
    display: flex;
    gap: 0.75rem;
    align-items: center;
  }

  .post-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .post-title a {
    color: inherit; /* Ensure title link inherits card color */
    text-decoration: none;
  }

  .post-title a:hover {
    text-decoration: underline;
  }

  .post-description {
    font-size: 0.9rem;
    line-height: 1.5;
  }

  .read-more {
    margin-top: auto; /* Pushes the link to the bottom */
    align-self: flex-start; /* Align link to the start */
  }
</style>
