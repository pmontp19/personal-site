---
const { pathname } = Astro.url;
---

<header>
  <div class="container">
    <div class="header-content">
      <div class="logo">
        
        <a href="/"><span class="logo-emoji">üë®‚Äçüíª</span> Pere Montpe√≥</a>
      </div>
      <button class="menu-toggle" aria-label="Toggle menu" aria-expanded="false">üçî</button>
      <nav class="main-nav">
        <ul class="nav-list">
          <li class="nav-item"><a href="/" class=`nav-link ${pathname === '/' ? 'active' : ''}`>Inici</a></li>
          <li class="nav-item"><a href="/blog" class=`nav-link ${pathname.startsWith('/blog') ? 'active' : ''}`>Apunts</a></li>
          <li class="nav-item"><a href="/experience" class=`nav-link ${pathname.startsWith('/experience') ? 'active' : ''}`>Experi√®ncia</a></li>
          <li class="nav-item"><a href="/contact" class=`nav-link ${pathname.startsWith('/contact') ? 'active' : ''}`>Contacte</a></li>
        </ul>
      </nav>
    </div>
  </div>
</header>

<script>
  const toggleMenu = () => {
    const menuToggle = document.querySelector('.menu-toggle');
    const mainNav = document.querySelector('.main-nav');
    if (!menuToggle || !mainNav) return;

    const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true';
    const newExpandedState = !isExpanded;
    menuToggle.setAttribute('aria-expanded', newExpandedState.toString());
    mainNav.classList.toggle('menu-open');

    if (newExpandedState) {
      menuToggle.textContent = '‚ùå';
      menuToggle.classList.add('menu-open-icon');
    } else {
      menuToggle.textContent = 'üçî';
      menuToggle.classList.remove('menu-open-icon');
    }
  };

  const handleClickOutside = (event: MouseEvent) => {
    const menuToggle = document.querySelector('.menu-toggle');
    const mainNav = document.querySelector('.main-nav');

    if (!mainNav || !menuToggle || !mainNav.classList.contains('menu-open')) {
      return;
    }

    if (!mainNav.contains(event.target as Node) &&
        !menuToggle.contains(event.target as Node)) {
      toggleMenu();
    }
  };

  const attachMenuListener = () => {
    const menuToggle = document.querySelector('.menu-toggle');
    const mainNav = document.querySelector('.main-nav');

    if (menuToggle && mainNav) {
      menuToggle.removeEventListener('click', toggleMenu);
      menuToggle.addEventListener('click', toggleMenu);

      document.removeEventListener('click', handleClickOutside);
      document.addEventListener('click', handleClickOutside);
    }
  };

  attachMenuListener();
  document.addEventListener('astro:page-load', attachMenuListener);
</script>

<style>
  header {
    padding: 1rem 0;
    border-bottom: 1px solid transparent;
    background-color: transparent;
    position: sticky;
    top: 0;
    z-index: 100;
    transition: background-color 0.3s ease, border-color 0.3s ease;
    transition: padding 0.3s ease, border-color 0.3s ease;
  }

  html.scrolled header {
    padding: 0 0;
    --backdrop-blur: 8px;
    background-color: hsla(var(--background-hsl) / 0.9);
    border-bottom: 1px solid var(--border);
    backdrop-filter: blur(var(--backdrop-blur));
    -webkit-backdrop-filter: blur(var(--backdrop-blur)); /* Safari support */
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 3.5rem;
    position: relative; /* Needed for absolute positioning of nav on mobile */
  }

  .logo {
    font-size: 1.5rem;
    display: inline-flex; /* Align emoji and text */
    align-items: center; /* Vertically center emoji and text */
    gap: 0.5rem; /* Add space between emoji and text */
  }

  .logo-emoji {
    display: inline-block; /* Needed for transform */
    transition: transform 0.3s ease; /* Smooth transition for non-animation states */
  }

  .logo:hover .logo-emoji {
    animation: tilt-n-move-shaking 0.5s infinite;
  }

  .logo a {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--foreground);
    text-decoration: none;
  }
  .logo a:hover {
    text-decoration: none;
    color: var(--primary);
  }

  @keyframes tilt-n-move-shaking {
    0% { transform: translate(0, 0) rotate(0deg); }
    25% { transform: translate(2px, 2px) rotate(5deg); } /* Reduced intensity */
    50% { transform: translate(0, 0) rotate(0eg); }
    75% { transform: translate(-2px, 2px) rotate(-5deg); } /* Reduced intensity */
    100% { transform: translate(0, 0) rotate(0deg); }
  }

  .menu-toggle {
    display: none;
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--foreground);
    padding: 0.5rem;
    line-height: 1;
    transition: transform 0.3s ease;
  }

  .menu-toggle.menu-open-icon {
    transform: rotate(90deg);
  }

  .main-nav {
    display: block;
  }

  .nav-list {
    display: flex;
    list-style: none;
    padding: 0;
    margin: 0;
    gap: 1.5rem;
  }

  .nav-link {
    font-size: 1rem;
    font-weight: 500;
    color: var(--text-muted);
    text-decoration: none;
    transition: color 0.2s ease;
    padding: 0.5rem 0;
    display: block;
  }

  .nav-link:hover,
  .nav-link:focus {
    color: var(--primary);
    text-decoration: none;
  }

  .nav-link.active {
    color: var(--foreground);
    font-weight: 600;
    position: relative; /* Needed for pseudo-element positioning */
    /* Remove previous underline styles */
    /* text-decoration: underline;
    text-decoration-style: wavy;
    text-decoration-thickness: 2px;
    text-underline-offset: 4px; */
  }

  /* Add the neon glow effect using ::after */
  .nav-link.active::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 10px; /* Position below the text, adjust as needed */
    width: 100%;
    height: 3px; /* Thickness of the main "LED" line */
    background-color: var(--primary); /* Color of the "LED" */
    border-radius: 1px; /* Slightly rounded ends */
    box-shadow:
      0 0 6px var(--primary), /* Inner glow */
      0 0 12px var(--primary); /* Outer glow */
    transition: all 0.3s ease; /* Smooth transition if properties change */
  }

  @media (max-width: 768px) {
    .menu-toggle {
      display: block;
      order: 1;
    }

    .main-nav {
      display: none;
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      background-color: var(--background);
      border-top: 1px solid var(--border);
      border-bottom: 1px solid var(--border);
      padding: 1rem 0;
      z-index: 99; /* Ensure it's above content but below sticky header */
    }

    .main-nav.menu-open {
      display: block;
    }

    .nav-list {
      flex-direction: column;
      align-items: center;
      gap: 0 1rem;
    }

    .nav-item {
      width: 100%;
      text-align: center;
    }

    .nav-link {
      padding: 0.75rem 1rem;
    }

    .header-content {
      /* Styles for mobile header content layout if needed */
    }

    .nav-link.active::after {
      bottom: 10px; /* Adjust position for centered text on mobile */
      left: 50%;
      transform: translateX(-50%);
      width: 20%; /* Make the glow shorter on mobile if desired */
    }
  }
</style>